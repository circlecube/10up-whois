{"version":3,"sources":["10up-logo.svg","components/PersonCard.js","components/Quiz.js","utils/API.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","state","clicked","clickPresident","setState","props","clickCallback","correct","onClick","this","data-clicked","src","post","acf","portrait","sizes","thumbnail","alt","title","rendered","Component","questionAnswers","score","total","randomNumbers","max","length","arr","r","Math","floor","random","indexOf","push","makeQuizQuestion","randomPresidents","posts","questionAnswer","handleCardClick","randomFour","numPresidents","randomIndexes","className","map","i","index","key","slug","axios","create","baseURL","method","responseType","App","isLoading","data","isQuiz","beginQuiz","logo","API","get","params","per_page","order","orderby","meta_key","request","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.108c9f20.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/10up-logo.a5fccafa.svg\";","import React, { Component } from 'react'\n\nexport default class extends Component {\n\tstate = {\n\t\tclicked: false,\n\t};\n\n\tclickPresident = () => {\n\n\t\tthis.setState({\n\t\t\tclicked: true,\n\t\t});\n\n\t\tthis.props.clickCallback( this.props.correct );\n\t}\n\n\trender () {\n\t\treturn (\n\t\t\t<li\n\t\t\t\tonClick={ this.clickPresident }\n\t\t\t\tdata-clicked={ this.state.clicked }\n\t\t\t>\n\t\t\t\t<img \n\t\t\t\t\tsrc={ this.props.post.acf.portrait[0].sizes.thumbnail } \n\t\t\t\t\talt={ this.props.post.title.rendered } \n\t\t\t\t/>\n\t\t\t\t<p>\n\t\t\t\t\t{ this.props.post.title.rendered }\n\t\t\t\t</p>\n\t\t\t</li>\n\t\t)\n\t}\n}","import React, { Component } from 'react'\nimport PersonCard from './PersonCard';\n\nexport default class extends Component {\n\tstate = {\n\t\tquestionAnswers: [],\n\t\tscore: {\n\t\t\tcorrect: 0,\n\t\t\ttotal: 0\n\t\t},\n\t};\n\n\tcomponentDidMount() {\n\t\tthis.makeQuizQuestion();\n\t}\n\n\trandomNumbers = (max, length) => {\n\t\tvar arr = [];\n\t\twhile(arr.length < length){\n\t\t\tvar r = Math.floor(Math.random() * max);\n\t\t\tif(arr.indexOf(r) === -1) arr.push(r);\n\t\t}\n\t\treturn arr;\n\t}\n\n\tmakeQuizQuestion = () => {\n\t\tthis.setState((state, props) => ({\n\t\t\tquestionAnswers: this.randomPresidents(props.posts),\n\t\t\tquestionAnswer: this.randomNumbers(4, 1),\n\t\t}));\n\t}\n\n\thandleCardClick = (correct) => {\n\t\tthis.setState((state, props) => ({\n\t\t\tscore: {\n\t\t\t\tcorrect: state.score.correct + correct,\n\t\t\t\ttotal: state.score.total + 1,\n\t\t\t}\n\t\t}));\n\t\tif ( correct ) {\n\t\t\tthis.makeQuizQuestion();\n\t\t}\n\t}\n\n\trandomPresidents = (posts) => {\n\t\tif ( posts ) {\n\t\t\tconst randomFour = [];\n\t\t\tconst numPresidents = posts.length;\n\t\t\tconst randomIndexes = this.randomNumbers(numPresidents, 4);\n\t\t\trandomFour.push(posts[randomIndexes[0]]);\n\t\t\trandomFour.push(posts[randomIndexes[1]]);\n\t\t\trandomFour.push(posts[randomIndexes[2]]);\n\t\t\trandomFour.push(posts[randomIndexes[3]]);\n\t\t\treturn randomFour;\n\t\t}\n\t}\n\n\trender (){\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<p>\n\t\t\t\t\t{ this.state.questionAnswers && this.state.questionAnswer && \n\t\t`Who is ${this.state.questionAnswers[this.state.questionAnswer[0]].title.rendered}?`\t\n\t\t\t\t\t}\n\t\t\t\t</p>\n\t\t\t\t<ul className=\"people-list\">\n\t\t\t\t{\n\t\t\t\t\tthis.state.questionAnswers.map( (post, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PersonCard \n\t\t\t\t\t\t\t\tpost={ post }\n\t\t\t\t\t\t\t\tindex={ i }\n\t\t\t\t\t\t\t\tcorrect={ i === this.state.questionAnswer[0] }\n\t\t\t\t\t\t\t\tkey={ post.slug }\n\t\t\t\t\t\t\t\tclickCallback={ this.handleCardClick }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t</ul>\n\n\t\t\t\t<button onClick={this.makeQuizQuestion}>Skip</button>\n\t\t\t\t\n\t\t\t\t<p className=\"score\">\n\t\t\t\t\t{ this.state.score.total &&\n\t\t\t\t\t\t`${ this.state.score.correct }\n\t\t\t\t\t\tof\n\t\t\t\t\t\t${ this.state.score.total }\n\t\t\t\t\t\t:\n\t\t\t\t\t\t${ this.state.score.correct / this.state.score.total * 100 }%`\n\t\t\t\t\t}\n\t\t\t\t</p>\n\n\t\t\t</>\n\t\t)\n\t}\n}","import axios from 'axios';\n\nexport default axios.create({\n\tbaseURL: \"https://circlecube.com/uspresidents/wp-json/wp/v2\",\n\tmethod: 'get',\n\tresponseType: 'json',\n});","import React from 'react';\n\nimport Quiz from './components/Quiz';\nimport PersonCard from './components/PersonCard';\nimport API from './utils/API';\nimport logo from './10up-logo.svg';\nimport './App.css';\n\nexport default class App extends React.Component {\n\tstate = {\n\t\tisLoading: true,\n\t\tdata: null,\n\t\tisQuiz: false,\n\t};\n\n\tbeginQuiz = () => {\n\t\tthis.setState({ \n\t\t\tisQuiz: true,\n\t\t});\n\t}\n\n\trender() {\n\t\n\t\treturn (\n\t\t\t<div className=\"App\">\n\t\t\t\t<header className=\"App-header\">\n\t\t\t\t\t\n\t\t\t\t\t<img src={logo} className=\"App-logo\" alt=\"logo\" />\n\n\t\t\t\t\t{ this.state.data && !this.state.isQuiz ? \t\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<p>Who are these people?</p>\n\t\t\t\t\t\t\t<ul className=\"people-list -mini\">\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tthis.state.data.map( post => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<PersonCard post={ post } key={ post.slug } />\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t</ul> \n\t\t\t\t\t\t\t<button onClick={this.beginQuiz}>\n\t\t\t\t\t\t\t\tBegin Quiz\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<p>Loading...</p>\n\t\t\t\t\t}\n\n\t\t\t\t\t{ this.state.isQuiz &&\n\t\t\t\t\t\t<Quiz \n\t\t\t\t\t\t\tposts={this.state.data}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t</header>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tasync componentDidMount() {\n\t\t// load async data\n\t\tlet request = await API.get('/president', {\n\t\t\t//per_page=50&order=asc&orderby=meta_value_num&meta_key=took_office\n\t\t\tparams: {\n\t\t\t\tper_page: 50,\n\t\t\t\torder: 'asc',\n\t\t\t\torderby: 'meta_value_num',\n\t\t\t\tmeta_key: 'took_office',\n\t\t\t}\n\t\t});\n\t\t// update state with new da\n\t\t// console.log(request.data);\n\t\tthis.setState({\n\t\t\tdata: request.data,\n\t\t\tisLoading: false,\n\t\t});\n\t\t// rerender app\n\t}\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render( <App />, document.getElementById('root') );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}